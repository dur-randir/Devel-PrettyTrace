NAME
    Devel::PrettyTrace - prints stack traces with arguments expanded into
    readable format

SYNOPSIS
        use Devel::PrettyTrace;
        
        sub foo{
            bar();
        }

        sub bar{
            bt;
        }

        foo(1, "b");

        #and you get
        
        main::bar() called at foo.pl line 4
        main::foo(
            [0] 1,
            [1] "b"
        ) called at foo.pl line 10

DESCRIPTION
    This module allows you to see detailed and pretty formatted stack
    straces of perl functions call. It exports a single function - "bt". In
    void context, it sends it's output to STDERR. In scalar context, it
    returns you collected data as string.

CONFIGURATION
    $Indent

    This string is appended to each line of output. Defaults to ' ' (two
    spaces).

    $Evalen

    How many symbols of a string eval to print. Defaults to 40.

    $Deeplimit

    How many call frames to go up. Defaults to 0 (unlimited).

    $Skiplevels

    How many calls up of the current frame to start printing. Defaults to 0
    (do not skip anything).

    %IgnorePkg

    Functions in a packages that are hash keys of %IgnorePkg are not shown
    in the stack trace output.

    %Opts

    Options for Data::Printer, that determine how to render arguments. If
    you need special formatting, do it here.

COPYRIGHT AND LICENSE
    Copyright (C) 2011,2018 by Sergey Aleynikov

    This library is free software; you can redistribute it and/or modify it
    under the same terms as Perl itself, either Perl version 5.10.1 or, at
    your option, any later version of Perl 5 you may have available.

